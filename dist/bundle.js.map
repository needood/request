{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/reqwest/reqwest.js","src/cache.js","src/core.js","src/fake-promise.js","src/hook.js","src/index.js","src/resend.js","src/throttle.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","request","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","name","context","definition","succeed","protocol","protocolRe","exec","url","location","httpsRe","test","twoHundo","status","response","handleReadyState","success","error","_aborted","_timedOut","readyState","onreadystatechange","noop","setHeaders","http","h","headers","defaultHeaders","isAFormData","FormData","requestedWith","contentType","hasOwnProperty","setRequestHeader","setCredentials","withCredentials","generalCallback","data","lastValue","urlappend","handleJsonp","fn","err","reqId","uniqid","cbkey","cbval","reqwest","getcallbackPrefix","cbreg","RegExp","match","script","doc","createElement","loaded","isIE10","navigator","userAgent","indexOf","replace","type","src","async","htmlFor","id","onload","onclick","undefined","head","removeChild","appendChild","abort","getRequest","method","toUpperCase","toQueryString","sendWait","xhr","open","xDomainRequest","onerror","onprogress","setTimeout","send","Reqwest","init","apply","arguments","setType","header","complete","resp","clearTimeout","timeout","_completeHandlers","shift","getResponseHeader","filteredResponse","globalSetupOptions","dataFilter","responseText","JSON","parse","eval","responseXML","parseError","errorCode","reason","_responseArgs","_fulfilled","_successHandler","_fulfillmentHandlers","timedOut","msg","_erred","_errorHandlers","push","normalize","serial","el","cb","ch","ra","val","tagName","toLowerCase","optCb","disabled","value","checked","selectedIndex","options","selected","eachFormElement","serializeSubtags","tags","j","fa","byTag","serializeQueryString","serializeArray","serializeHash","hash","isArray","buildParams","prefix","obj","traditional","add","v","rbracket","toString","document","XHR2","ex","callbackPrefix","Date","xmlHttpRequest","Array","accept","*","xml","html","text","json","js","XMLHttpRequest","XDomainRequest","ActiveXObject","prototype","retry","then","fail","always","catch","arr","serialize","opt","args","slice","pop","nodeType","trad","enc","encodeURIComponent","key","join","compat","ajaxSetup","k","getCache","cache","stringify","setCache","req","needCache","fake","fakeData","_successHandle","_handle","FakePromise","promise","_failHandle","errFn","message","block","constructor","hookMap","setHookFunction","mid","hook","setHandle","Object","reqwestWrap","standalone","resend","successFn","failFn","alwaysFn","core","map"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n  * Reqwest! A general purpose XHR connection manager\n  * license MIT (c) Dustin Diaz 2015\n  * https://github.com/ded/reqwest\n  */\n\n!function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else context[name] = definition()\n}('reqwest', this, function () {\n\n  var context = this\n\n  if ('window' in context) {\n    var doc = document\n      , byTag = 'getElementsByTagName'\n      , head = doc[byTag]('head')[0]\n  } else {\n    var XHR2\n    try {\n      XHR2 = require('xhr2')\n    } catch (ex) {\n      throw new Error('Peer dependency `xhr2` required! Please npm install xhr2')\n    }\n  }\n\n\n  var httpsRe = /^http/\n    , protocolRe = /(^\\w+):\\/\\//\n    , twoHundo = /^(20\\d|1223)$/ //http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n    , readyState = 'readyState'\n    , contentType = 'Content-Type'\n    , requestedWith = 'X-Requested-With'\n    , uniqid = 0\n    , callbackPrefix = 'reqwest_' + (+new Date())\n    , lastValue // data stored by the most recent JSONP callback\n    , xmlHttpRequest = 'XMLHttpRequest'\n    , xDomainRequest = 'XDomainRequest'\n    , noop = function () {}\n\n    , isArray = typeof Array.isArray == 'function'\n        ? Array.isArray\n        : function (a) {\n            return a instanceof Array\n          }\n\n    , defaultHeaders = {\n          'contentType': 'application/x-www-form-urlencoded'\n        , 'requestedWith': xmlHttpRequest\n        , 'accept': {\n              '*':  'text/javascript, text/html, application/xml, text/xml, */*'\n            , 'xml':  'application/xml, text/xml'\n            , 'html': 'text/html'\n            , 'text': 'text/plain'\n            , 'json': 'application/json, text/javascript'\n            , 'js':   'application/javascript, text/javascript'\n          }\n      }\n\n    , xhr = function(o) {\n        // is it x-domain\n        if (o['crossOrigin'] === true) {\n          var xhr = context[xmlHttpRequest] ? new XMLHttpRequest() : null\n          if (xhr && 'withCredentials' in xhr) {\n            return xhr\n          } else if (context[xDomainRequest]) {\n            return new XDomainRequest()\n          } else {\n            throw new Error('Browser does not support cross-origin requests')\n          }\n        } else if (context[xmlHttpRequest]) {\n          return new XMLHttpRequest()\n        } else if (XHR2) {\n          return new XHR2()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      }\n    , globalSetupOptions = {\n        dataFilter: function (data) {\n          return data\n        }\n      }\n\n  function succeed(r) {\n    var protocol = protocolRe.exec(r.url)\n    protocol = (protocol && protocol[1]) || context.location.protocol\n    return httpsRe.test(protocol) ? twoHundo.test(r.request.status) : !!r.request.response\n  }\n\n  function handleReadyState(r, success, error) {\n    return function () {\n      // use _aborted to mitigate against IE err c00c023f\n      // (can't read props on aborted request objects)\n      if (r._aborted) return error(r.request)\n      if (r._timedOut) return error(r.request, 'Request is aborted: timeout')\n      if (r.request && r.request[readyState] == 4) {\n        r.request.onreadystatechange = noop\n        if (succeed(r)) success(r.request)\n        else\n          error(r.request)\n      }\n    }\n  }\n\n  function setHeaders(http, o) {\n    var headers = o['headers'] || {}\n      , h\n\n    headers['Accept'] = headers['Accept']\n      || defaultHeaders['accept'][o['type']]\n      || defaultHeaders['accept']['*']\n\n    var isAFormData = typeof FormData !== 'undefined' && (o['data'] instanceof FormData);\n    // breaks cross-origin requests with legacy browsers\n    if (!o['crossOrigin'] && !headers[requestedWith]) headers[requestedWith] = defaultHeaders['requestedWith']\n    if (!headers[contentType] && !isAFormData) headers[contentType] = o['contentType'] || defaultHeaders['contentType']\n    for (h in headers)\n      headers.hasOwnProperty(h) && 'setRequestHeader' in http && http.setRequestHeader(h, headers[h])\n  }\n\n  function setCredentials(http, o) {\n    if (typeof o['withCredentials'] !== 'undefined' && typeof http.withCredentials !== 'undefined') {\n      http.withCredentials = !!o['withCredentials']\n    }\n  }\n\n  function generalCallback(data) {\n    lastValue = data\n  }\n\n  function urlappend (url, s) {\n    return url + (/\\?/.test(url) ? '&' : '?') + s\n  }\n\n  function handleJsonp(o, fn, err, url) {\n    var reqId = uniqid++\n      , cbkey = o['jsonpCallback'] || 'callback' // the 'callback' key\n      , cbval = o['jsonpCallbackName'] || reqwest.getcallbackPrefix(reqId)\n      , cbreg = new RegExp('((^|\\\\?|&)' + cbkey + ')=([^&]+)')\n      , match = url.match(cbreg)\n      , script = doc.createElement('script')\n      , loaded = 0\n      , isIE10 = navigator.userAgent.indexOf('MSIE 10.0') !== -1\n\n    if (match) {\n      if (match[3] === '?') {\n        url = url.replace(cbreg, '$1=' + cbval) // wildcard callback func name\n      } else {\n        cbval = match[3] // provided callback func name\n      }\n    } else {\n      url = urlappend(url, cbkey + '=' + cbval) // no callback details, add 'em\n    }\n\n    context[cbval] = generalCallback\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.async = true\n    if (typeof script.onreadystatechange !== 'undefined' && !isIE10) {\n      // need this for IE due to out-of-order onreadystatechange(), binding script\n      // execution to an event listener gives us control over when the script\n      // is executed. See http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n      script.htmlFor = script.id = '_reqwest_' + reqId\n    }\n\n    script.onload = script.onreadystatechange = function () {\n      if ((script[readyState] && script[readyState] !== 'complete' && script[readyState] !== 'loaded') || loaded) {\n        return false\n      }\n      script.onload = script.onreadystatechange = null\n      script.onclick && script.onclick()\n      // Call the user callback with the last value stored and clean up values and scripts.\n      fn(lastValue)\n      lastValue = undefined\n      head.removeChild(script)\n      loaded = 1\n    }\n\n    // Add the script to the DOM head\n    head.appendChild(script)\n\n    // Enable JSONP timeout\n    return {\n      abort: function () {\n        script.onload = script.onreadystatechange = null\n        err({}, 'Request is aborted: timeout', {})\n        lastValue = undefined\n        head.removeChild(script)\n        loaded = 1\n      }\n    }\n  }\n\n  function getRequest(fn, err) {\n    var o = this.o\n      , method = (o['method'] || 'GET').toUpperCase()\n      , url = typeof o === 'string' ? o : o['url']\n      // convert non-string objects to query-string form unless o['processData'] is false\n      , data = (o['processData'] !== false && o['data'] && typeof o['data'] !== 'string')\n        ? reqwest.toQueryString(o['data'])\n        : (o['data'] || null)\n      , http\n      , sendWait = false\n\n    // if we're working on a GET request and we have data then we should append\n    // query string to end of URL and not post data\n    if ((o['type'] == 'jsonp' || method == 'GET') && data) {\n      url = urlappend(url, data)\n      data = null\n    }\n\n    if (o['type'] == 'jsonp') return handleJsonp(o, fn, err, url)\n\n    // get the xhr from the factory if passed\n    // if the factory returns null, fall-back to ours\n    http = (o.xhr && o.xhr(o)) || xhr(o)\n\n    http.open(method, url, o['async'] === false ? false : true)\n    setHeaders(http, o)\n    setCredentials(http, o)\n    if (context[xDomainRequest] && http instanceof context[xDomainRequest]) {\n        http.onload = fn\n        http.onerror = err\n        // NOTE: see\n        // http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/30ef3add-767c-4436-b8a9-f1ca19b4812e\n        http.onprogress = function() {}\n        sendWait = true\n    } else {\n      http.onreadystatechange = handleReadyState(this, fn, err)\n    }\n    o['before'] && o['before'](http)\n    if (sendWait) {\n      setTimeout(function () {\n        http.send(data)\n      }, 200)\n    } else {\n      http.send(data)\n    }\n    return http\n  }\n\n  function Reqwest(o, fn) {\n    this.o = o\n    this.fn = fn\n\n    init.apply(this, arguments)\n  }\n\n  function setType(header) {\n    // json, javascript, text/plain, text/html, xml\n    if (header === null) return undefined; //In case of no content-type.\n    if (header.match('json')) return 'json'\n    if (header.match('javascript')) return 'js'\n    if (header.match('text')) return 'html'\n    if (header.match('xml')) return 'xml'\n  }\n\n  function init(o, fn) {\n\n    this.url = typeof o == 'string' ? o : o['url']\n    this.timeout = null\n\n    // whether request has been fulfilled for purpose\n    // of tracking the Promises\n    this._fulfilled = false\n    // success handlers\n    this._successHandler = function(){}\n    this._fulfillmentHandlers = []\n    // error handlers\n    this._errorHandlers = []\n    // complete (both success and fail) handlers\n    this._completeHandlers = []\n    this._erred = false\n    this._responseArgs = {}\n\n    var self = this\n\n    fn = fn || function () {}\n\n    if (o['timeout']) {\n      this.timeout = setTimeout(function () {\n        timedOut()\n      }, o['timeout'])\n    }\n\n    if (o['success']) {\n      this._successHandler = function () {\n        o['success'].apply(o, arguments)\n      }\n    }\n\n    if (o['error']) {\n      this._errorHandlers.push(function () {\n        o['error'].apply(o, arguments)\n      })\n    }\n\n    if (o['complete']) {\n      this._completeHandlers.push(function () {\n        o['complete'].apply(o, arguments)\n      })\n    }\n\n    function complete (resp) {\n      o['timeout'] && clearTimeout(self.timeout)\n      self.timeout = null\n      while (self._completeHandlers.length > 0) {\n        self._completeHandlers.shift()(resp)\n      }\n    }\n\n    function success (resp) {\n      var type = o['type'] || resp && setType(resp.getResponseHeader('Content-Type')) // resp can be undefined in IE\n      resp = (type !== 'jsonp') ? self.request : resp\n      // use global data filter on response text\n      var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type)\n        , r = filteredResponse\n      try {\n        resp.responseText = r\n      } catch (e) {\n        // can't assign this in IE<=8, just ignore\n      }\n      if (r) {\n        switch (type) {\n        case 'json':\n          try {\n            resp = context.JSON ? context.JSON.parse(r) : eval('(' + r + ')')\n          } catch (err) {\n            return error(resp, 'Could not parse JSON in response', err)\n          }\n          break\n        case 'js':\n          resp = eval(r)\n          break\n        case 'html':\n          resp = r\n          break\n        case 'xml':\n          resp = resp.responseXML\n              && resp.responseXML.parseError // IE trololo\n              && resp.responseXML.parseError.errorCode\n              && resp.responseXML.parseError.reason\n            ? null\n            : resp.responseXML\n          break\n        }\n      }\n\n      self._responseArgs.resp = resp\n      self._fulfilled = true\n      fn(resp)\n      self._successHandler(resp)\n      while (self._fulfillmentHandlers.length > 0) {\n        resp = self._fulfillmentHandlers.shift()(resp)\n      }\n\n      complete(resp)\n    }\n\n    function timedOut() {\n      self._timedOut = true\n      self.request.abort()\n    }\n\n    function error(resp, msg, t) {\n      resp = self.request\n      self._responseArgs.resp = resp\n      self._responseArgs.msg = msg\n      self._responseArgs.t = t\n      self._erred = true\n      while (self._errorHandlers.length > 0) {\n        self._errorHandlers.shift()(resp, msg, t)\n      }\n      complete(resp)\n    }\n\n    this.request = getRequest.call(this, success, error)\n  }\n\n  Reqwest.prototype = {\n    abort: function () {\n      this._aborted = true\n      this.request.abort()\n    }\n\n  , retry: function () {\n      init.call(this, this.o, this.fn)\n    }\n\n    /**\n     * Small deviation from the Promises A CommonJs specification\n     * http://wiki.commonjs.org/wiki/Promises/A\n     */\n\n    /**\n     * `then` will execute upon successful requests\n     */\n  , then: function (success, fail) {\n      success = success || function () {}\n      fail = fail || function () {}\n      if (this._fulfilled) {\n        this._responseArgs.resp = success(this._responseArgs.resp)\n      } else if (this._erred) {\n        fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._fulfillmentHandlers.push(success)\n        this._errorHandlers.push(fail)\n      }\n      return this\n    }\n\n    /**\n     * `always` will execute whether the request succeeds or fails\n     */\n  , always: function (fn) {\n      if (this._fulfilled || this._erred) {\n        fn(this._responseArgs.resp)\n      } else {\n        this._completeHandlers.push(fn)\n      }\n      return this\n    }\n\n    /**\n     * `fail` will execute when the request fails\n     */\n  , fail: function (fn) {\n      if (this._erred) {\n        fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._errorHandlers.push(fn)\n      }\n      return this\n    }\n  , 'catch': function (fn) {\n      return this.fail(fn)\n    }\n  }\n\n  function reqwest(o, fn) {\n    return new Reqwest(o, fn)\n  }\n\n  // normalize newline variants according to spec -> CRLF\n  function normalize(s) {\n    return s ? s.replace(/\\r?\\n/g, '\\r\\n') : ''\n  }\n\n  function serial(el, cb) {\n    var n = el.name\n      , t = el.tagName.toLowerCase()\n      , optCb = function (o) {\n          // IE gives value=\"\" even where there is no value attribute\n          // 'specified' ref: http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273\n          if (o && !o['disabled'])\n            cb(n, normalize(o['attributes']['value'] && o['attributes']['value']['specified'] ? o['value'] : o['text']))\n        }\n      , ch, ra, val, i\n\n    // don't serialize elements that are disabled or without a name\n    if (el.disabled || !n) return\n\n    switch (t) {\n    case 'input':\n      if (!/reset|button|image|file/i.test(el.type)) {\n        ch = /checkbox/i.test(el.type)\n        ra = /radio/i.test(el.type)\n        val = el.value\n        // WebKit gives us \"\" instead of \"on\" if a checkbox has no value, so correct it here\n        ;(!(ch || ra) || el.checked) && cb(n, normalize(ch && val === '' ? 'on' : val))\n      }\n      break\n    case 'textarea':\n      cb(n, normalize(el.value))\n      break\n    case 'select':\n      if (el.type.toLowerCase() === 'select-one') {\n        optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null)\n      } else {\n        for (i = 0; el.length && i < el.length; i++) {\n          el.options[i].selected && optCb(el.options[i])\n        }\n      }\n      break\n    }\n  }\n\n  // collect up all form elements found from the passed argument elements all\n  // the way down to child elements; pass a '<form>' or form fields.\n  // called with 'this'=callback to use for serial() on each element\n  function eachFormElement() {\n    var cb = this\n      , e, i\n      , serializeSubtags = function (e, tags) {\n          var i, j, fa\n          for (i = 0; i < tags.length; i++) {\n            fa = e[byTag](tags[i])\n            for (j = 0; j < fa.length; j++) serial(fa[j], cb)\n          }\n        }\n\n    for (i = 0; i < arguments.length; i++) {\n      e = arguments[i]\n      if (/input|select|textarea/i.test(e.tagName)) serial(e, cb)\n      serializeSubtags(e, [ 'input', 'select', 'textarea' ])\n    }\n  }\n\n  // standard query string style serialization\n  function serializeQueryString() {\n    return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments))\n  }\n\n  // { 'name': 'value', ... } style serialization\n  function serializeHash() {\n    var hash = {}\n    eachFormElement.apply(function (name, value) {\n      if (name in hash) {\n        hash[name] && !isArray(hash[name]) && (hash[name] = [hash[name]])\n        hash[name].push(value)\n      } else hash[name] = value\n    }, arguments)\n    return hash\n  }\n\n  // [ { name: 'name', value: 'value' }, ... ] style serialization\n  reqwest.serializeArray = function () {\n    var arr = []\n    eachFormElement.apply(function (name, value) {\n      arr.push({name: name, value: value})\n    }, arguments)\n    return arr\n  }\n\n  reqwest.serialize = function () {\n    if (arguments.length === 0) return ''\n    var opt, fn\n      , args = Array.prototype.slice.call(arguments, 0)\n\n    opt = args.pop()\n    opt && opt.nodeType && args.push(opt) && (opt = null)\n    opt && (opt = opt.type)\n\n    if (opt == 'map') fn = serializeHash\n    else if (opt == 'array') fn = reqwest.serializeArray\n    else fn = serializeQueryString\n\n    return fn.apply(null, args)\n  }\n\n  reqwest.toQueryString = function (o, trad) {\n    var prefix, i\n      , traditional = trad || false\n      , s = []\n      , enc = encodeURIComponent\n      , add = function (key, value) {\n          // If value is a function, invoke it and return its value\n          value = ('function' === typeof value) ? value() : (value == null ? '' : value)\n          s[s.length] = enc(key) + '=' + enc(value)\n        }\n    // If an array was passed in, assume that it is an array of form elements.\n    if (isArray(o)) {\n      for (i = 0; o && i < o.length; i++) add(o[i]['name'], o[i]['value'])\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in o) {\n        if (o.hasOwnProperty(prefix)) buildParams(prefix, o[prefix], traditional, add)\n      }\n    }\n\n    // spaces should be + according to spec\n    return s.join('&').replace(/%20/g, '+')\n  }\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name, i, v\n      , rbracket = /\\[\\]$/\n\n    if (isArray(obj)) {\n      // Serialize array item.\n      for (i = 0; obj && i < obj.length; i++) {\n        v = obj[i]\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v)\n        } else {\n          buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add)\n        }\n      }\n    } else if (obj && obj.toString() === '[object Object]') {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + '[' + name + ']', obj[name], traditional, add)\n      }\n\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj)\n    }\n  }\n\n  reqwest.getcallbackPrefix = function () {\n    return callbackPrefix\n  }\n\n  // jQuery and Zepto compatibility, differences can be remapped here so you can call\n  // .ajax.compat(options, callback)\n  reqwest.compat = function (o, fn) {\n    if (o) {\n      o['type'] && (o['method'] = o['type']) && delete o['type']\n      o['dataType'] && (o['type'] = o['dataType'])\n      o['jsonpCallback'] && (o['jsonpCallbackName'] = o['jsonpCallback']) && delete o['jsonpCallback']\n      o['jsonp'] && (o['jsonpCallback'] = o['jsonp'])\n    }\n    return new Reqwest(o, fn)\n  }\n\n  reqwest.ajaxSetup = function (options) {\n    options = options || {}\n    for (var k in options) {\n      globalSetupOptions[k] = options[k]\n    }\n  }\n\n  return reqwest\n});\n","var reqwest = require('reqwest');\nvar cache = {};\n\nfunction getCache(data) {\n    return cache[JSON.stringify(data)];\n}\n\nfunction setCache(data, resp) {\n    cache[JSON.stringify(data)] = resp;\n    return cache;\n}\n\n\n\nmodule.exports = function reqwestWrap(req) {\n    var resp, data = req.data, cache = req.cache;\n    function needCache(resp){\n        if(typeof cache === \"function\"){\n            return cache(resp);\n        }\n        return false;\n    }\n    if (req.cache) {\n        resp = getCache(data);\n        if (resp) {\n            req.fake = true;\n            req.fakeData.success = resp;\n        } else {\n            if(cache=== true){\n                req._successHandle.push(function(resp) {\n                    setCache(data, resp);\n                    return resp;\n                });\n            }else{\n                req._handle.push(function(resp) {\n                    if(needCache(resp)){\n                        setCache(data, resp);\n                    }\n                    return resp;\n                });\n            }\n        }\n    }\n};\n","var FakePromise = require('./fake-promise.js');\nvar reqwest = require('reqwest');\nmodule.exports = function(request){\n    if(request.fake){\n        promise = new FakePromise(request);\n    }else{\n        promise = reqwest(request.data);\n    }\n    var _successHandle = request._successHandle;\n    var _failHandle = request._failHandle;\n    var _handle = request._handle;\n    for(var i=0;i<_successHandle.length;i++){\n        promise.then(_successHandle[i]);\n    }\n    for(i=0;i<_failHandle.length;i++){\n        promise.fail(_failHandle[i]);\n    }\n    for(i=0;i<_handle.length;i++){\n        promise.always(_handle[i]);\n    }\n    return promise;\n};\n","function FakePromise(req) {\n    this.fakeData = req.fakeData;\n    this.context = this.fakeData.success;\n}\n\nFakePromise.prototype = {\n    then: function(cb, errFn) {\n        if (!this.fakeData.fail) {\n            this.context = cb(this.context);\n        } else if (errFn) {\n            errFn(this.fakeData.fail, this.fakeData.fail);\n        }\n        return this;\n    },\n    fail: function(cb) {\n        if (this.fakeData.fail) {\n            cb(this.fakeData.fail, this.fakeData.fail.message);\n        }\n        return this;\n    },\n    always: function(cb) {\n        this.context = cb(this.context);\n        return this;\n    },\n    block: function(cb){\n        if (this.fakeData.block) {\n            cb(this.fakeData.block);\n        }\n        return this;\n    },\n    constructor: FakePromise\n};\n\nmodule.exports = FakePromise;\n","var hookMap = {};\n\n\n\nfunction getCache(key,data,fn) {\n    if(hookMap[key]){\n        return hookMap[key](data,fn);\n    }\n}\n\nfunction setCache(key, value) {\n    if(typeof value === \"function\"){\n        hookMap[key] = value;\n    }else{\n        hookMap[key] = function(){\n            return value;\n        };\n    }\n    return hookMap;\n}\n\n\n\nmodule.exports = {\n    setHookFunction:setCache,\n    mid:function reqwestWrap(req) {\n        var resp, data = req.data;\n        if (req.hook) {\n            resp = getCache(req.hook,data,req.setHandle);\n            if (resp) {\n                req.fake = true;\n                if(Object.prototype.toString.call(resp)=== \"[object Error]\"){\n                    req.fakeData.fail = resp;\n                }else{\n                    req.fakeData.success = resp;\n                }\n            }\n        }\n    }\n};\n","var setHookFunction = require(\"./hook\").setHookFunction;\nvar core = require(\"./core\");\nfunction reqwestWrap(data, opt) {\n    opt = opt || {};\n    var standalone = opt.standalone;\n    var cache = opt.cache;\n    var hook = opt.hook;\n    var resend = opt.resend;\n    var request = {\n        data: data,\n        standalone: standalone,\n        cache: cache,\n        hook:hook,\n        resend:resend,\n        _successHandle: [],\n        _failHandle: [],\n        _handle: [],\n        fake: false,\n        fakeData: {}\n    };\n    request.setHandle = function(successFn,failFn,alwaysFn){\n        if(typeof successFn ===\"function\"){\n            request._successHandle.push(successFn);\n        }\n        if(typeof failFn ===\"function\"){\n            request._failHandle.push(failFn);\n        }\n        if(typeof alwaysFn ===\"function\"){\n            request._handle.push(alwaysFn);\n        }\n    };\n    var promise;\n\n    function mid(fn) {\n        fn(request);\n    }\n    mid(require(\"./hook\").mid);\n    mid(require(\"./throttle\"));\n    mid(require(\"./resend\"));\n    mid(require(\"./cache\"));\n    return core(request);\n}\nreqwestWrap.setHookFunction = setHookFunction;\nmodule.exports = reqwestWrap;\n","var core = require(\"./core\");\nmodule.exports = function reqwestWrap(req) {\n    var resend = req.resend;\n    if (resend) {\n        req._handle.push(function(resp) {\n            resend(resp,function(){\n                core(req);\n            });\n            return resp;\n        });\n    }\n};\n","var map = {};\nmodule.exports = function reqwestWrap(req) {\n    var standalone = req.standalone;\n    if (standalone) {\n        if (map[standalone]) {\n            req.fakeData.block = req.data;\n            req.fake = true;\n        } else {\n            map[standalone] = true;\n            req._handle.push(function(resp) {\n                map[standalone] = false;\n                return resp;\n            });\n        }\n    }\n};\n"],"sourceRoot":"/source/"}